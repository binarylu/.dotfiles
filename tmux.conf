#--------------------------------------------------------------------------
# Note {{{
#---------------------------------------------------------------------------
# From man page
# bind-key: alias bind
# bind -r: Allow multiple commands to be entered without pressing the prefix-key again in the specified time milliseconds in the specified time milliseconds
# set-option: alias set
# Thanks to https://github.com/xuxiaodong/tmuxen/blob/master/_tmux.conf
# }}}

#---------------------------------------------------------------------------
# General Settings {{{
#---------------------------------------------------------------------------
set -g default-terminal "screen-256color"

# message
# Set the amount of time for which status line messages and other on-screen
# indicators are displayed.  time is in milliseconds.
set -g display-time 2000
set -g message-style "fg=#eeeeee,bg=#222222,dim"

# Set the time in milliseconds for which tmux waits after an escape is input
# to determine if it is part of a function or meta key sequences.  The
# default is 500 milliseconds.
set -g escape-time 0
set -g history-limit 65535
set -g base-index 1
set -g pane-base-index 1
set -g allow-rename off
set -g renumber-windows on
setw -g monitor-activity on
set -g visual-activity on
# enable mouse
set -g mouse off

# status-utf8 is no longer necessary.
#set -g status-utf8 on
# Update the status bar every interval seconds.
set -g status-interval 10
set -g status-keys vi

setw -g mode-keys vi
setw -g automatic-rename off

#set -g pane-border-fg red
#set -g pane-border-bg yellow
#set -g pane-active-border-fg yellow
# }}}

#---------------------------------------------------------------------------
# Bind Keys {{{
#---------------------------------------------------------------------------
# prefix key (Ctrl+a)
set -g prefix ^a
unbind ^b
bind ^a send-prefix

# use plugin instead
## Toggle log to file
#bind H pipe-pane -o 'cat >>$HOME/#W-tmux.log' '\;' display-message 'Toggled logging to $HOME/#W-tmux.log'

# split window
unbind '"'
bind - splitw -v # vertical split (prefix -)
unbind %
bind | splitw -h # horizontal split (prefix |)

# select pane
bind -r k selectp -U # above
bind -r j selectp -D # below
bind -r h selectp -L # left
bind -r l selectp -R # right

# resize pane
bind -r ^k resizep -U 5 # upward
bind -r ^j resizep -D 5 # downward
bind -r ^h resizep -L 5 # to the left
bind -r ^l resizep -R 5 # to the right

# swap pane
bind -r ^u swapp -U # swap with the previous pane
bind -r ^d swapp -D # swap with the next pane

# misc
bind -r ^e lastp  # select the last pane
#bind ^q killp  # kill pane
bind -r a last    # select the last window
#bind q killw   # kill window

# mouse
# set mouse on with prefix C-m
bind ^m \
    set -g mouse on \;\
    set -g mouse-utf8 on \;\
    display 'Mouse: ON'
# set mouse off with prefix C-n
bind ^n \
    set -g mouse off \;\
    set -g mouse-utf8 off \;\
    display 'Mouse: OFF'

# copy mode
bind Escape copy-mode             # enter copy mode (prefix Escape)
bind ^p pasteb                    # paste buffer (prefix Ctrl+p)
bind -t vi-copy v begin-selection # select (v)
bind -t vi-copy y copy-selection  # copy (y)

# app
bind ! splitw htop                                     # htop (prefix !)
bind m command-prompt "splitw 'exec man %%'"           # man (prefix m)
bind @ command-prompt "splitw 'exec perldoc -t -f %%'" # perl func (prefix @)
bind * command-prompt "splitw 'exec perldoc -t -v %%'" # perl var (prefix *)
bind % command-prompt "splitw 'exec perldoc -t %%'"    # perl doc (prefix %)
bind / command-prompt "splitw 'exec ri %%'"            # ruby doc (prefix /)

# reload config (prefix r)
bind r source ~/.tmux.conf \; display "Configuration reloaded!"
# }}}

#---------------------------------------------------------------------------
# Status Bar {{{
#---------------------------------------------------------------------------
# statusbar
set -g status-justify left
set -g status-style "fg=#eeeeee,bg=#222222,dim"
set -g status-left "{#S}#[default]>> "
set -g status-left-length 200
set -g status-right-style "fg=#7fb8d8"
set -g status-right "#[fg=brightwhite,bold]#{?client_prefix,#(tmux show -qgv prefix | sed 's/C-/\^/'),""}#[default] #(uptime | awk -F':' '{print \$NF}') #[fg=white]|#[fg=#00bb00] #(whoami) #[default]@ #[fg=#5555ff]#h#[default] | #[fg=#00bbbb]%a %b %d %R #{online_status} <<"
set -g status-right-length 100

# window
setw -g window-status-format "#I:#W(#{pane_current_command})#F"
setw -g window-status-current-format "[#I:#W#F](#{window_panes})"
setw -g window-status-current-style "fg=#6c7e55,bg=#222222,bold"
# }}}

#---------------------------------------------------------------------------
# Plugin {{{
#---------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-logging'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# }}}

# vim:ft=vim:fdm=marker:ff=unix:nowrap:tabstop=4:shiftwidth=4:softtabstop=4:smarttab:shiftround:expandtab
